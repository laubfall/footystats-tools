/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  JobInformation,
  Precast,
  PredictionQualityRevision,
  Report,
} from '../models';
import {
    JobInformationFromJSON,
    JobInformationToJSON,
    PrecastFromJSON,
    PrecastToJSON,
    PredictionQualityRevisionFromJSON,
    PredictionQualityRevisionToJSON,
    ReportFromJSON,
    ReportToJSON,
} from '../models';

export interface LatestReportRequest {
    moreQualityDetailsForThisBetType: LatestReportMoreQualityDetailsForThisBetTypeEnum;
}

export interface PrecastRequest {
    predictionQualityRevision: PredictionQualityRevision;
}

/**
 * 
 */
export class PredictionQualityControllerApi extends runtime.BaseAPI {

    /**
     * bar
     * foo
     */
    async computeQualityRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/predictionquality/compute`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * bar
     * foo
     */
    async computeQuality(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.computeQualityRaw(initOverrides);
    }

    /**
     */
    async latestReportRaw(requestParameters: LatestReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Report>> {
        if (requestParameters.moreQualityDetailsForThisBetType === null || requestParameters.moreQualityDetailsForThisBetType === undefined) {
            throw new runtime.RequiredError('moreQualityDetailsForThisBetType','Required parameter requestParameters.moreQualityDetailsForThisBetType was null or undefined when calling latestReport.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/predictionquality/latest/report/{moreQualityDetailsForThisBetType}`.replace(`{${"moreQualityDetailsForThisBetType"}}`, encodeURIComponent(String(requestParameters.moreQualityDetailsForThisBetType))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReportFromJSON(jsonValue));
    }

    /**
     */
    async latestReport(requestParameters: LatestReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Report> {
        const response = await this.latestReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async precastRaw(requestParameters: PrecastRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Precast>> {
        if (requestParameters.predictionQualityRevision === null || requestParameters.predictionQualityRevision === undefined) {
            throw new runtime.RequiredError('predictionQualityRevision','Required parameter requestParameters.predictionQualityRevision was null or undefined when calling precast.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/predictionquality/precast`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PredictionQualityRevisionToJSON(requestParameters.predictionQualityRevision),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PrecastFromJSON(jsonValue));
    }

    /**
     */
    async precast(requestParameters: PrecastRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Precast> {
        const response = await this.precastRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async recomputeQualityRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobInformation>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/predictionquality/recompute`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => JobInformationFromJSON(jsonValue));
    }

    /**
     */
    async recomputeQuality(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobInformation> {
        const response = await this.recomputeQualityRaw(initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const LatestReportMoreQualityDetailsForThisBetTypeEnum = {
    OverZeroFive: 'OVER_ZERO_FIVE',
    OverOneFive: 'OVER_ONE_FIVE',
    BttsYes: 'BTTS_YES',
    BttsNo: 'BTTS_NO'
} as const;
export type LatestReportMoreQualityDetailsForThisBetTypeEnum = typeof LatestReportMoreQualityDetailsForThisBetTypeEnum[keyof typeof LatestReportMoreQualityDetailsForThisBetTypeEnum];
