/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PredictionQualityRevision } from './PredictionQualityRevision';
import {
    PredictionQualityRevisionFromJSON,
    PredictionQualityRevisionFromJSONTyped,
    PredictionQualityRevisionToJSON,
} from './PredictionQualityRevision';

/**
 * 
 * @export
 * @interface Precast
 */
export interface Precast {
    /**
     * 
     * @type {PredictionQualityRevision}
     * @memberof Precast
     */
    revision?: PredictionQualityRevision;
    /**
     * 
     * @type {number}
     * @memberof Precast
     */
    predictionsToAssess?: number;
}

/**
 * Check if a given object implements the Precast interface.
 */
export function instanceOfPrecast(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PrecastFromJSON(json: any): Precast {
    return PrecastFromJSONTyped(json, false);
}

export function PrecastFromJSONTyped(json: any, ignoreDiscriminator: boolean): Precast {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'revision': !exists(json, 'revision') ? undefined : PredictionQualityRevisionFromJSON(json['revision']),
        'predictionsToAssess': !exists(json, 'predictionsToAssess') ? undefined : json['predictionsToAssess'],
    };
}

export function PrecastToJSON(value?: Precast | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'revision': PredictionQualityRevisionToJSON(value.revision),
        'predictionsToAssess': value.predictionsToAssess,
    };
}

