/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BetPredictionDistribution } from './BetPredictionDistribution';
import {
    BetPredictionDistributionFromJSON,
    BetPredictionDistributionFromJSONTyped,
    BetPredictionDistributionToJSON,
} from './BetPredictionDistribution';

/**
 * 
 * @export
 * @interface BetPredictionQuality
 */
export interface BetPredictionQuality {
    /**
     * 
     * @type {string}
     * @memberof BetPredictionQuality
     */
    bet?: BetPredictionQualityBetEnum;
    /**
     * 
     * @type {number}
     * @memberof BetPredictionQuality
     */
    countAssessed?: number;
    /**
     * 
     * @type {number}
     * @memberof BetPredictionQuality
     */
    countSuccess?: number;
    /**
     * 
     * @type {number}
     * @memberof BetPredictionQuality
     */
    countFailed?: number;
    /**
     * 
     * @type {number}
     * @memberof BetPredictionQuality
     */
    countSuccessDontBet?: number;
    /**
     * 
     * @type {number}
     * @memberof BetPredictionQuality
     */
    countFailedDontBet?: number;
    /**
     * 
     * @type {Array<BetPredictionDistribution>}
     * @memberof BetPredictionQuality
     */
    distributionBetOnThis?: Array<BetPredictionDistribution>;
    /**
     * 
     * @type {Array<BetPredictionDistribution>}
     * @memberof BetPredictionQuality
     */
    distributionBetOnThisFailed?: Array<BetPredictionDistribution>;
    /**
     * 
     * @type {Array<BetPredictionDistribution>}
     * @memberof BetPredictionQuality
     */
    distributionDontBetOnThis?: Array<BetPredictionDistribution>;
    /**
     * 
     * @type {Array<BetPredictionDistribution>}
     * @memberof BetPredictionQuality
     */
    distributionDontBetOnThisFailed?: Array<BetPredictionDistribution>;
    /**
     * 
     * @type {Array<BetPredictionDistribution>}
     * @memberof BetPredictionQuality
     */
    distributionBetSuccessful?: Array<BetPredictionDistribution>;
}


/**
 * @export
 */
export const BetPredictionQualityBetEnum = {
    OverZeroFive: 'OVER_ZERO_FIVE',
    OverOneFive: 'OVER_ONE_FIVE',
    BttsYes: 'BTTS_YES',
    BttsNo: 'BTTS_NO'
} as const;
export type BetPredictionQualityBetEnum = typeof BetPredictionQualityBetEnum[keyof typeof BetPredictionQualityBetEnum];


/**
 * Check if a given object implements the BetPredictionQuality interface.
 */
export function instanceOfBetPredictionQuality(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BetPredictionQualityFromJSON(json: any): BetPredictionQuality {
    return BetPredictionQualityFromJSONTyped(json, false);
}

export function BetPredictionQualityFromJSONTyped(json: any, ignoreDiscriminator: boolean): BetPredictionQuality {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bet': !exists(json, 'bet') ? undefined : json['bet'],
        'countAssessed': !exists(json, 'countAssessed') ? undefined : json['countAssessed'],
        'countSuccess': !exists(json, 'countSuccess') ? undefined : json['countSuccess'],
        'countFailed': !exists(json, 'countFailed') ? undefined : json['countFailed'],
        'countSuccessDontBet': !exists(json, 'countSuccessDontBet') ? undefined : json['countSuccessDontBet'],
        'countFailedDontBet': !exists(json, 'countFailedDontBet') ? undefined : json['countFailedDontBet'],
        'distributionBetOnThis': !exists(json, 'distributionBetOnThis') ? undefined : ((json['distributionBetOnThis'] as Array<any>).map(BetPredictionDistributionFromJSON)),
        'distributionBetOnThisFailed': !exists(json, 'distributionBetOnThisFailed') ? undefined : ((json['distributionBetOnThisFailed'] as Array<any>).map(BetPredictionDistributionFromJSON)),
        'distributionDontBetOnThis': !exists(json, 'distributionDontBetOnThis') ? undefined : ((json['distributionDontBetOnThis'] as Array<any>).map(BetPredictionDistributionFromJSON)),
        'distributionDontBetOnThisFailed': !exists(json, 'distributionDontBetOnThisFailed') ? undefined : ((json['distributionDontBetOnThisFailed'] as Array<any>).map(BetPredictionDistributionFromJSON)),
        'distributionBetSuccessful': !exists(json, 'distributionBetSuccessful') ? undefined : ((json['distributionBetSuccessful'] as Array<any>).map(BetPredictionDistributionFromJSON)),
    };
}

export function BetPredictionQualityToJSON(value?: BetPredictionQuality | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bet': value.bet,
        'countAssessed': value.countAssessed,
        'countSuccess': value.countSuccess,
        'countFailed': value.countFailed,
        'countSuccessDontBet': value.countSuccessDontBet,
        'countFailedDontBet': value.countFailedDontBet,
        'distributionBetOnThis': value.distributionBetOnThis === undefined ? undefined : ((value.distributionBetOnThis as Array<any>).map(BetPredictionDistributionToJSON)),
        'distributionBetOnThisFailed': value.distributionBetOnThisFailed === undefined ? undefined : ((value.distributionBetOnThisFailed as Array<any>).map(BetPredictionDistributionToJSON)),
        'distributionDontBetOnThis': value.distributionDontBetOnThis === undefined ? undefined : ((value.distributionDontBetOnThis as Array<any>).map(BetPredictionDistributionToJSON)),
        'distributionDontBetOnThisFailed': value.distributionDontBetOnThisFailed === undefined ? undefined : ((value.distributionDontBetOnThisFailed as Array<any>).map(BetPredictionDistributionToJSON)),
        'distributionBetSuccessful': value.distributionBetSuccessful === undefined ? undefined : ((value.distributionBetSuccessful as Array<any>).map(BetPredictionDistributionToJSON)),
    };
}

