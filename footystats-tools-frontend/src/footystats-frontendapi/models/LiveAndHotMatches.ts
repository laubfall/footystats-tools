/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Country } from './Country';
import {
    CountryFromJSON,
    CountryFromJSONTyped,
    CountryToJSON,
} from './Country';

/**
 * 
 * @export
 * @interface LiveAndHotMatches
 */
export interface LiveAndHotMatches {
    /**
     * 
     * @type {string}
     * @memberof LiveAndHotMatches
     */
    homeTeam?: string;
    /**
     * 
     * @type {string}
     * @memberof LiveAndHotMatches
     */
    awayTeam?: string;
    /**
     * 
     * @type {Country}
     * @memberof LiveAndHotMatches
     */
    country?: Country;
    /**
     * 
     * @type {Set<string>}
     * @memberof LiveAndHotMatches
     */
    hotBets?: Set<LiveAndHotMatchesHotBetsEnum>;
}


/**
 * @export
 */
export const LiveAndHotMatchesHotBetsEnum = {
    OverZeroFive: 'OVER_ZERO_FIVE',
    OverOneFive: 'OVER_ONE_FIVE',
    BttsYes: 'BTTS_YES',
    BttsNo: 'BTTS_NO'
} as const;
export type LiveAndHotMatchesHotBetsEnum = typeof LiveAndHotMatchesHotBetsEnum[keyof typeof LiveAndHotMatchesHotBetsEnum];


/**
 * Check if a given object implements the LiveAndHotMatches interface.
 */
export function instanceOfLiveAndHotMatches(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LiveAndHotMatchesFromJSON(json: any): LiveAndHotMatches {
    return LiveAndHotMatchesFromJSONTyped(json, false);
}

export function LiveAndHotMatchesFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiveAndHotMatches {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'homeTeam': !exists(json, 'homeTeam') ? undefined : json['homeTeam'],
        'awayTeam': !exists(json, 'awayTeam') ? undefined : json['awayTeam'],
        'country': !exists(json, 'country') ? undefined : CountryFromJSON(json['country']),
        'hotBets': !exists(json, 'hotBets') ? undefined : json['hotBets'],
    };
}

export function LiveAndHotMatchesToJSON(value?: LiveAndHotMatches | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'homeTeam': value.homeTeam,
        'awayTeam': value.awayTeam,
        'country': CountryToJSON(value.country),
        'hotBets': value.hotBets === undefined ? undefined : Array.from(value.hotBets as Set<any>),
    };
}

