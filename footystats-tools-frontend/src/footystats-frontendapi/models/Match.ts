/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PredictionResult,
    PredictionResultFromJSON,
    PredictionResultFromJSONTyped,
    PredictionResultToJSON,
} from './PredictionResult';

/**
 * 
 * @export
 * @interface Match
 */
export interface Match {
    /**
     * 
     * @type {number}
     * @memberof Match
     */
    dateUnix?: number;
    /**
     * 
     * @type {Date}
     * @memberof Match
     */
    dateGMT?: Date;
    /**
     * 
     * @type {string}
     * @memberof Match
     */
    country?: string;
    /**
     * 
     * @type {string}
     * @memberof Match
     */
    league?: string;
    /**
     * 
     * @type {string}
     * @memberof Match
     */
    homeTeam?: string;
    /**
     * 
     * @type {string}
     * @memberof Match
     */
    awayTeam?: string;
    /**
     * 
     * @type {number}
     * @memberof Match
     */
    goalsHomeTeam?: number;
    /**
     * 
     * @type {number}
     * @memberof Match
     */
    goalsAwayTeam?: number;
    /**
     * 
     * @type {string}
     * @memberof Match
     */
    state?: MatchStateEnum;
    /**
     * 
     * @type {string}
     * @memberof Match
     */
    footyStatsUrl?: string;
    /**
     * 
     * @type {PredictionResult}
     * @memberof Match
     */
    o05?: PredictionResult;
    /**
     * 
     * @type {PredictionResult}
     * @memberof Match
     */
    bttsYes?: PredictionResult;
    /**
     * 
     * @type {number}
     * @memberof Match
     */
    revision?: number;
}

/**
* @export
* @enum {string}
*/
export enum MatchStateEnum {
    Complete = 'complete',
    Incomplete = 'incomplete',
    Suspended = 'suspended',
    Canceled = 'canceled'
}

export function MatchFromJSON(json: any): Match {
    return MatchFromJSONTyped(json, false);
}

export function MatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): Match {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dateUnix': !exists(json, 'dateUnix') ? undefined : json['dateUnix'],
        'dateGMT': !exists(json, 'dateGMT') ? undefined : (new Date(json['dateGMT'])),
        'country': !exists(json, 'country') ? undefined : json['country'],
        'league': !exists(json, 'league') ? undefined : json['league'],
        'homeTeam': !exists(json, 'homeTeam') ? undefined : json['homeTeam'],
        'awayTeam': !exists(json, 'awayTeam') ? undefined : json['awayTeam'],
        'goalsHomeTeam': !exists(json, 'goalsHomeTeam') ? undefined : json['goalsHomeTeam'],
        'goalsAwayTeam': !exists(json, 'goalsAwayTeam') ? undefined : json['goalsAwayTeam'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'footyStatsUrl': !exists(json, 'footyStatsUrl') ? undefined : json['footyStatsUrl'],
        'o05': !exists(json, 'o05') ? undefined : PredictionResultFromJSON(json['o05']),
        'bttsYes': !exists(json, 'bttsYes') ? undefined : PredictionResultFromJSON(json['bttsYes']),
        'revision': !exists(json, 'revision') ? undefined : json['revision'],
    };
}

export function MatchToJSON(value?: Match | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dateUnix': value.dateUnix,
        'dateGMT': value.dateGMT === undefined ? undefined : (value.dateGMT.toISOString()),
        'country': value.country,
        'league': value.league,
        'homeTeam': value.homeTeam,
        'awayTeam': value.awayTeam,
        'goalsHomeTeam': value.goalsHomeTeam,
        'goalsAwayTeam': value.goalsAwayTeam,
        'state': value.state,
        'footyStatsUrl': value.footyStatsUrl,
        'o05': PredictionResultToJSON(value.o05),
        'bttsYes': PredictionResultToJSON(value.bttsYes),
        'revision': value.revision,
    };
}

